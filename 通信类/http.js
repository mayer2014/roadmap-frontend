TCP/IP五层协议模型
应用层--->传输层--->网络层--->数据链路层--->物理层
分别给数据加上：
Http报文->Htpp数据-->TCP首部+Http数据--->IP首部+TCP首部+Http数据----> 以太网首部+IP首部+TCP首部+Http数据

HTTP请求由状态行、请求头、请求正文三部分组成：
状态行：包括请求方式Method、资源路径URL、协议版本Version；
请求头：包括一些访问的域名、用户代理、Cookie等信息；
请求正文：就是HTTP请求的数据。


TCP是面向连接的可靠的
三次握手：
为的是保证client和server的接收和发送功能都没问题，
（第一次）client发送连接请求，此时处于连接等待状态，server接收到后回复一个ack（第二次），表示同意连接，此时也处于连接等待状态，
clent收到后就可以确认自己的发送和接收能力是没问题的，就建立了连接，但是server不知道自己的接收能力如何，需要client最后发送一次ack，（第三次）
server接收到后确认了自己的发送和接收能力没问题了，就建立了连接

目的：为了防止已失效的连接请求报文段突然又传送到了服务端，因而产生错误
比如说client发出的第一个连接请求报文段在某个网络结点长时间的滞留了，以致延误到连接释放以后的某个时间才到达server，由于采用三次握手，
server确认并没有与client建立连接，而忽略这段报文

四次挥手：
可以是客户端，也可以是服务器进行四次挥手，比如主机1（client），主机2（server）
第一次：主机1向主机2发送请求，表示主机1已经没有数据要发给你了。
第二次：主机2回复一个ack，表示同意断开
第三次：主机2向主机1请求关闭连接，然后处于LAST-ACK 状态
第四次：主机1回复一个ack，表示同意断开，主机2收到后就关闭连接了，此时主机1等待一段时间还没得到回复后就判断主机2已经断开了，然后也进入关闭状态

目的：为了知道彼此都没有数据发送了。
第一次和第二次是主机1说我已经没有数据要发送给你了，主机2同意后，知道了主机1没有数据发送了，但是主机2还是可以发送数据给主机1，
第三次和第四次是主机2说我也没有数据要发送给你了，主机1知道后，彼此就知道了都没数据要发送了，就真正断开了。