// 1B(byte字节) === 8 bit(位)
// 1KB === 2^10B (1024B)
// 1MB === 2^10KB
// 1GB === 2^10MB
// 1TB === 2^10GB

// _7 _6 _5 _4 _3 _2 _1 _0  所以一个字节可以取的范围为：2^7+2^6+2^5+2^4+2^3+2^2+2^1+2^0=
// === 128 + 64 + 32 + 16 + 8 + 4 + 2 + 1 = 255

// 十进制转二进制：
// 整数：20（10100）
// 20/2 = 10  余0
// 10/2 = 5  余0
// 5/2=2  余1
// 2/2=1  余0
// 1/2=0  余1
// 然后从下往上取： 10100

// 计算小数时就用乘的，取整数部分
// 小数: 0.1
// 0.1 * 2 = 0.2 余 0
// 0.2 * 2 = 0.4 余 0
// 0.4 * 2 = 0.8 余 0
// 0.8 * 2 = 0.6 余 1
// 0.6 * 2 = 0.2 余 1
// 一直到0，答案为0.0001100110011......一直无限循环

// 所以在JS中会把多余的部分截取，0.1 + 0.2 ！== 0.3。